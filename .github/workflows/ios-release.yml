name: Build and Distribute

on:
  push:
    branches:
      - main

jobs:
  build:
    name: build
    runs-on: macos-14

    steps:
      - uses: actions/checkout@v2

      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '3.27.3'
    
      - name: Setup Flutter Environment
        run: |
          flutter clean
          flutter pub get 
      
      # 清除 Xcode 缓存
      - name: Clean Xcode Cache
        run: |
          rm -rf ~/Library/Developer/Xcode/DerivedData
          rm -rf ~/Library/Developer/Xcode/iOS\ DeviceSupport
          rm -rf ~/Library/Developer/Xcode/Archives
          rm -rf ~/Library/Developer/Xcode/Products

      # 添加 Xcode 版本选择
      - name: Select Xcode 16.2
        run: sudo xcode-select -s /Applications/Xcode_16.2.app

      # 设置 CocoaPods
      # - name: Setup CocoaPods
      #   run: |
      #     cd ios
      #     rm -rf Pods
      #     rm -f Podfile.lock
      #     pod install --repo-update
          
      # 添加详细的环境信息调试步骤
      - name: Print Environment Info
        run: |
          echo "============= Environment Variables ============="
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          FLUTTER_ROOT=$(which flutter | xargs dirname | xargs dirname)
          echo "FLUTTER_ROOT: $FLUTTER_ROOT"
          echo "FLUTTER_APPLICATION_PATH: $GITHUB_WORKSPACE"
          echo "Current Directory: $(pwd)"


      - uses: cedvdb/action-flutter-build-ios@v1
        with:
          build-cmd: |
            flutter build ipa --release --export-options-plist=ios/ExportOptions.plist --no-tree-shake-icons
          certificate-base64: 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
          
          certificate-password: 111111
          
          provisioning-profile-base64: 

          keychain-password: 111111

      # # 添加检查步骤
      - name: 检查构建文件
        run: |
          echo "检查 build/ios/ipa 目录内容："
          ls -la build/ios/ipa/
          echo "检查 build/ios 目录内容："
          ls -la build/ios/

      - name: Archive IPA
        uses: actions/upload-artifact@v4
        with:
          name: release-ipa
          path: build/ios/ipa

          
      # - name: Upload using iTMSTransporter
      #   env:
      #     WORKING_DIRECTORY: build/ios/ipa
      #     IPA_FILE_NAME: oiyo.ipa
      #     APPLE_USERNAME: Nina2000HH@outlook.com
      #     APPLE_PASSWORD: zeqo-kyio-mlkw-kbwf
      #     APPLE_ASC_PROVIDER: 798RL7J5U7
      #   run: |
      #     cd $WORKING_DIRECTORY
      #     git clone https://github.com/ZhangLi1984/itsm.git
      #     ./itsm/bin/iTMSTransporter -assetFile $IPA_FILE_NAME -u $APPLE_USERNAME -p $APPLE_PASSWORD -m upload -asc_provider $APPLE_ASC_PROVIDER -v verbose

      - name: Upload to App Store using altool
        env:
          IPA_PATH: "build/ios/ipa/divzor.ipa"
          APPLE_ID: "jovendasmarinas22@outlook.com"
          APP_SPECIFIC_PASSWORD: "mvgr-pflv-vhej-knnb"
        run: |
          xcrun altool --upload-app -f "$IPA_PATH" \
            -t ios \
            -u "$APPLE_ID" \
            -p "$APP_SPECIFIC_PASSWORD" \
            --verbose
